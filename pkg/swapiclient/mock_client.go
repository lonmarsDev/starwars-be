// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/lonmarsDev/starwars-be/pkg/swapiclient (interfaces: SwApiClientAction)
//
// Generated by this command:
//
//	mockgen -destination mock_client.go -package swapiclient github.com/lonmarsDev/starwars-be/pkg/swapiclient SwApiClientAction
//

// Package swapiclient is a generated GoMock package.
package swapiclient

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSwApiClientAction is a mock of SwApiClientAction interface.
type MockSwApiClientAction struct {
	ctrl     *gomock.Controller
	recorder *MockSwApiClientActionMockRecorder
}

// MockSwApiClientActionMockRecorder is the mock recorder for MockSwApiClientAction.
type MockSwApiClientActionMockRecorder struct {
	mock *MockSwApiClientAction
}

// NewMockSwApiClientAction creates a new mock instance.
func NewMockSwApiClientAction(ctrl *gomock.Controller) *MockSwApiClientAction {
	mock := &MockSwApiClientAction{ctrl: ctrl}
	mock.recorder = &MockSwApiClientActionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSwApiClientAction) EXPECT() *MockSwApiClientActionMockRecorder {
	return m.recorder
}

// Request mocks base method.
func (m *MockSwApiClientAction) Request(arg0 context.Context, arg1 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Request indicates an expected call of Request.
func (mr *MockSwApiClientActionMockRecorder) Request(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*MockSwApiClientAction)(nil).Request), arg0, arg1)
}

// SearchPeople mocks base method.
func (m *MockSwApiClientAction) SearchPeople(arg0 context.Context, arg1 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchPeople", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchPeople indicates an expected call of SearchPeople.
func (mr *MockSwApiClientActionMockRecorder) SearchPeople(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchPeople", reflect.TypeOf((*MockSwApiClientAction)(nil).SearchPeople), arg0, arg1)
}
